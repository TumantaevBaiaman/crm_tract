version: '3.7'

services:
  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - my-network
    env_file:
      - ./.env


  backend:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    ports:
      - 8000:8000
    volumes:
      - static_volume:/app/backend/staticfiles
      - media_volume:/app/backend/media
    entrypoint: /app/docker/backend/wsgi-entrypoint.sh
    networks:
      - my-network
    depends_on:
      - db
      - redis
    env_file:
      - ./.env

  celery:
    build: .
    command: celery -A crm_tract worker --loglevel=info
    volumes:
      - .:/code
    depends_on:
      - db
      - redis

  scheduler:
    build: .
    command: python manage.py crontab add && tail -f /dev/null
    volumes:
      - .:/code
    depends_on:
      - db
      - redis

  redis:
    image: redis:latest

  nginx:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./docker/nginx/dev:/etc/nginx/conf.d
      - static_volume:/app/backend/staticfiles
      - media_volume:/app/backend/media
      - ./docker/nginx/certbot/conf:/etc/letsencrypt
      - ./docker/nginx/certbot/www:/var/www/certbot
    networks:
      - my-network
    depends_on:
      - backend
      - db

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./docker/nginx/certbot/conf:/etc/letsencrypt
      - ./docker/nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  media_volume:
  static_volume:
  postgres_data:

networks:
  my-network: